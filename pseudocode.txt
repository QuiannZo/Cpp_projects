// Assuming input matrix has already been processed called area

typedef struct Cell {
    char status; // if cell is flooded, above sea level or is a refuge
    bool checked; // true if cell has been checked (visited)
    int zone_size; // to keep track of the zone size the cell belongs to
} Cell;

// Uses "depth-first search" recursive algorithm to visit and mark corresponding cells of a zone as checked if not already
// This is so that when find_max_size runs, it doesn't call this function on already checked zones.
// Keeps track of the size of the zone and returns it
int mark_zones(int row, int col, bool checked) {
    ...
}

// Loops through the area to find '-' that isn't checked, if found then uses mark_zones
// Uses mark_zones' return value to compare to the biggest size found
// Returns the biggest zone size found
find_max_size() {
    ...
}

// Changes the status of a specific cell
change_status(int max_zone_size, char status, char new_status) {
    ...
}
main() {
    ...
}